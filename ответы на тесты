Цикл событий (EvenLoop) отвечает за выполнение кода, сбора и обработки событий и выполнения под-задач из очереди 

Назначение цикла событий в том, чтобы задачи кода выполнялись в строгом порядке

Синхронный код выполняется в в том порядке, в котором были написаны, асинхронный код - наоборот, вызов функции не означает, что она отработает именно сейчас

setTimeout делает "отложенный код", который будет выполнятся по истечении времени, указанному в функции

setTimeout вызывает функцию один раз, setInterval вызывает функцию множество раз, через заданный промежуток времени

Асинхронный JavaScript - возможность выполнять работу кода не в строгом порядке. Нужен для того, чтобы отрабатывать код в отложенном режиме, например, для того, 
чтобы получить данные которых пока нет

Асинхронные колбэки — это функции, которые определяются как аргументы при вызове функции, которая начнёт выполнение кода на заднем фоне. Когда код на заднем фоне
завершает свою работу, он вызывает колбэк-функцию, оповещающую, что работа сделана, либо оповещающую о трудностях в завершении работы.

Какова роль цикла событий в асинхронном JavaScript?

Промис — это объект, представляющий асинхронную операцию, выполненную удачно или неудачно. Он представляет собой как бы промежуточное состояние. По сути, это способ 
браузера сказать: "я обещаю вернуться к вам с ответом как можно скорее", поэтому в дословном переводе "промис" (promise) означает "обещание". Промис более современная 
функция в JS нежели колбэк

Функция конструктор - функция, позволющая создавать множество похожих, однотипных объектов, ее назначение реализовать код для многократного создания однотипных объектов.

Функция-конструктор должна создаваться только с помощью оператора "new"

В отличие от обычной функции функция конструктор, вызванная с помощью new всегда возвращает объект

Ключевое слово this используется для доступы к информации внутри объекта. Значение this – это объект «перед точкой», который используется для вызова метода.

При помощи ключевого оператора "new"

Ключевое слово new используется для создания функции-конструктора

Методы к объекту, созданному с помощью функции-конструктора можно добавить с помощью классов

Класс можно рассматривать как набор данных (полей, атрибутов, членов класса) и функций для работы с ними (методов). Бфл введен дкак синтаксис 
для улучшения читаемости кода

Для создания класса необходимо прописать ключевое слово class и далее название для класса

В чем разница между классом и функцией-конструктором в JavaScript?

Для добавления в элемент класса существует метод classList. add() . В качестве параметра он принимает имя класса, который нужно добавить.

Что такое ключевое слово this в классе и как оно используется?

Как определить свойства и методы в классе?
