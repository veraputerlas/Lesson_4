Ответ на задачу 1:
function CreateButton(textContent, color, callBack) {
    this.textContent = textContent;
    this.color = color;
    this.callBack = callBack;
  
    this.layout = () => {
      let button = document.createElement('button');
      button.type = 'button';
      button.style.background = this.color;
      button.innerText = this.textContent;
      button.setAttribute('onclick', `(${this.callBack})()`);
      return button.outerHTML;
    };
  
    this.setTextContent = (newTextContent) => this.textContent = newTextContent;
  
    this.setCallBack = (newCallBack) => this.callBack = newCallBack;
    
  }
  let button = new CreateButton('Нажми на меня', 'red', () => { alert('Хай') });
button.setTextContent('Привет');
button.setCallBack(() => { alert('Как дела?'); });
  document.write(button.layout());
  
  Ответ на задац 2:
  
  class CreateInpit {
    constructor(placeholder, value, callBack) {
    this.placeholder = placeholder;
    this.value = value;
    this.callBack = callBack;

    this.layot = () => {
        let input = document.createElement('input');
        input.type = 'text';
        input.innerText = this.textContent
        input.setAttribute('oninput', (${this.callBack})());
        return input.outerHTML;
    }
    this.setPlaceholder = (newPlaceholder) => this.placeholder = newPlaceholder;
    this.setValue = (newValue) => this.value = newValue;
    this.setCallBack = (newCallBack) => this.callBack = newCallBack;
    }
}

let input = new CreateInpit('Привет');
input.setPlaceholder('Привет');
input.setCallBack(() => { alert('Как дела?'); });

document.write(input.layot());
  
